openapi: 3.0.0
info:
  title: My Express API
  version: "1.0.0"
  description: API documentation using YAML
servers:
  - url: http://localhost:8080/api/v1

paths:
  /user/register:
    post:
      summary: Register a new user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - phone_number
                - password
                - pin
              properties:
                name:
                  type: string
                  example: John Doe
                phone_number:
                  type: string
                  example: 628123456789
                password:
                  type: string
                  example: mySecretPassword
                pin:
                  type: string
                  example: "123456"
      responses:
        "201":
          description: User registered successfully
        "400":
          description: Validation error

  /user/login:
    post:
      summary: Login user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone_number
                - password
              properties:
                phone_number:
                  type: string
                  example: 628123456789
                password:
                  type: string
                  example: mySecretPassword
      responses:
        "200":
          description: User logged in successfully
        "401":
          description: Invalid credentials

  /user/me:
    get:
      summary: Get user profile
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User profile data
        "401":
          description: Unauthorized

  /pocket:
    get:
      summary: Get all user pockets
      tags:
        - Pocket
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of user's pockets
        "401":
          description: Unauthorized

    post:
      summary: Create a new pocket
      tags:
        - Pocket
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - type
                - target_nominal
                - status
              properties:
                name:
                  type: string
                  example: Liburan ke Bali
                type:
                  type: string
                  enum: [saving, spending,business]
                  example: spending
                target_nominal:
                  type: number
                  format: float
                  example: 5000000
                deadline:
                  type: string
                  format: date
                  example: 2025-12-31
                status:
                  type: string
                  example: active
                icon_name:
                  type: string
                  example: travel
                color_hex:
                  type: string
                  example: '#FFAA00'
                members:
                  type: array
                  description: List of additional members to be added to the pocket
                  items:
                    type: object
                    required:
                      - user_id
                    properties:
                      user_id:
                        type: integer
                        example: 2
                      role:
                        type: string
                        enum: [member, admin]
                        default: member
            example:
              name: Liburan ke Bali
              type: group
              target_nominal: 5000000
              deadline: 2025-12-31
              status: active
              icon_name: travel
              color_hex: "#FFAA00"
              members:
                - user_id: 2
                  role: member
                - user_id: 3
                - user_id: 4
                  role: admin
      responses:
        '201':
          description: Pocket created successfully
        '400':
          description: Bad request
        '500':
          description: Server error

  /pocket/{id}:
    get:
      summary: Get pocket detail by ID
      tags:
        - Pocket
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Pocket ID
      responses:
        "200":
          description: Pocket detail data
        "404":
          description: Pocket not found or access denied
        "401":
          description: Unauthorized

    patch:
      summary: Update pocket by ID
      tags:
        - Pocket
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Pocket ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Tabungan Baru
                type:
                  type: enum
                  enum: [savings, spending, business]
                  example: savings
                target_nominal:
                  type: number
                  example: 7500000
                deadline:
                  type: string
                  format: date
                  example: 2026-01-01
                status:
                  type: string
                  example: active
                icon_name:
                  type: string
                  example: gift
                color_hex:
                  type: string
                  example: "#00AAFF"
      responses:
        "200":
          description: Pocket updated successfully
        "400":
          description: Validation error or failed to update
        "401":
          description: Unauthorized
        "404":
          description: Pocket not found or access denied

    delete:
      summary: Delete pocket by ID
      tags:
        - Pocket
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Pocket ID
      responses:
        "200":
          description: Pocket deleted successfully
        "401":
          description: Unauthorized
        "404":
          description: Pocket not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
