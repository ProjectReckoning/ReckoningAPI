openapi: 3.0.0
info:
  title: My Express API
  version: "1.0.0"
  description: API documentation using YAML
servers:
  - url: /api/v1

paths:
  /user/register:
    post:
      summary: Register a new user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - phone_number
                - password
                - pin
              properties:
                name:
                  type: string
                  example: John Doe
                phone_number:
                  type: string
                  example: 628123456789
                password:
                  type: string
                  example: mySecretPassword
                pin:
                  type: string
                  example: "123456"
      responses:
        "201":
          description: User registered successfully
        "400":
          description: Validation error

  /user/login:
    post:
      summary: Login user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone_number
                - password
              properties:
                phone_number:
                  type: string
                  example: 628123456789
                password:
                  type: string
                  example: mySecretPassword
      responses:
        "200":
          description: User logged in successfully
        "401":
          description: Invalid credentials

  /user/me:
    get:
      summary: Get user profile
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User profile data
        "401":
          description: Unauthorized

  /user/register-push-token:
    post:
      summary: Register Expo push token for notifications
      tags:
        - Notification
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - expoPushToken
              properties:
                expoPushToken:
                  type: string
                  example: "ExponentPushToken[xxxxxxxxxxxxxxxxxxxxxx]"
      responses:
        "201":
          description: Push token registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      userId:
                        type: integer
                        example: 2
                      expoPushToken:
                        type: string
                        example: thisistoken
                      _id:
                        type: string
                        example: thisisidfrommongo
                  message:
                    type: string
                    example: Push token registered successfully
              example:
                data:
                  userId: 2
                  expoPushToken: thisistoken
                  _id: thisisidfrommongo
                message: Push token registered successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized

  /user/login/request-otp:
    post:
      summary: Request OTP for web login
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone_number
                - password
              properties:
                phone_number:
                  type: string
                  example: "628123456789"
                password:
                  type: string
                  example: "yourPassword"
      responses:
        "201":
          description: OTP sent to registered device
          content:
            application/json:
              schema:
                type: object
                properties:
                  phone_number:
                    type: string
                  sessionId:
                    type: string
        "400":
          description: Bad request
        "401":
          description: Unauthorized

  /user/login/verify-otp:
    post:
      summary: Verify OTP for web login
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone_number
                - sessionId
                - otp
              properties:
                phone_number:
                  type: string
                  example: "628123456789"
                sessionId:
                  type: string
                  example: "a1b2c3d4-e5f6-7890-1234-56789abcdef0"
                otp:
                  type: string
                  example: "123456"
      responses:
        "201":
          description: OTP verified, JWT token returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "400":
          description: Bad request
        "401":
          description: Invalid or expired OTP

  /user/add-balance:
    patch:
      summary: Add balance to user's mock savings account
      tags:
        - User
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - balance
              properties:
                balance:
                  type: number
                  example: 100000
      responses:
        "201":
          description: Balance added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      balance:
                        type: number
                        example: 200000
                  message:
                    type: string
                    example: User has updated their balance
                  code:
                    type: integer
                    example: 201
        "401":
          description: Unauthorized
        "404":
          description: User's mock saving account not found

  /pocket:
    get:
      summary: Get all user pockets
      tags:
        - Pocket
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of user's pockets
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        pocket_id:
                          type: integer
                          example: 4
                        name:
                          type: string
                        type:
                          type: string
                        target_nominal:
                          type: string
                        current_balance:
                          type: string
                        deadline:
                          type: string
                          format: date-time
                        status:
                          type: string
                        icon_name:
                          type: string
                        color_hex:
                          type: string
                        account_number:
                          type: string
                        user_role:
                          type: string
                  message:
                    type: string
                  code:
                    type: integer
              example:
                ok: true
                data:
                  - pocket_id: 4
                    name: Arisan Keluarga
                    type: saving
                    target_nominal: "2000000"
                    current_balance: "1200000"
                    deadline: "2024-07-01T00:00:00.000Z"
                    status: active
                    icon_name: family
                    color_hex: "#96CEB4"
                    account_number: "PKT001234567893"
                    user_role: viewer
                  - pocket_id: 6
                    name: Liburan Bismillahhhhh
                    type: spending
                    target_nominal: "1000000"
                    current_balance: "1000000"
                    deadline: "2025-12-31T00:00:00.000Z"
                    status: active
                    icon_name: flight_takeoff
                    color_hex: "#00BCD4"
                    account_number: "950859915"
                    user_role: owner
                message: User pockets fetched successfully
                code: 200

    post:
      summary: Create a new pocket
      tags:
        - Pocket
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - type
                - target_nominal
                - status
              properties:
                name:
                  type: string
                  example: Pocket Keluarga
                type:
                  type: string
                  enum: [saving, spending, business]
                  example: saving
                target_nominal:
                  type: number
                  example: 100000000
                deadline:
                  type: string
                  format: date
                  example: 2025-12-31
                status:
                  type: string
                  example: active
                icon_name:
                  type: string
                  example: flight_takeoff
                color_hex:
                  type: string
                  example: "#00BCD4"
                members:
                  type: array
                  description: List of additional members to invite (excluding the creator)
                  items:
                    type: object
                    required:
                      - user_id
                    properties:
                      user_id:
                        type: integer
                        example: 3
                      role:
                        type: string
                        enum: [viewer, admin, spender]
                        example: viewer
      responses:
        "201":
          description: Pocket and members created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 9
                      name:
                        type: string
                        example: Pocket Keluarga
                      type:
                        type: string
                        example: saving
                      target_nominal:
                        type: string
                        example: "100000000"
                      current_balance:
                        type: string
                        example: "0"
                      deadline:
                        type: string
                        format: date-time
                        example: 2025-12-31T00:00:00.000Z
                      status:
                        type: string
                        example: active
                      owner_user_id:
                        type: integer
                        example: 2
                      icon_name:
                        type: string
                        example: flight_takeoff
                      color_hex:
                        type: string
                        example: "#00BCD4"
                      account_number:
                        type: string
                        example: "872961193"
                      updatedAt:
                        type: string
                        format: date-time
                        example: 2025-06-17T02:10:53.934Z
                      createdAt:
                        type: string
                        format: date-time
                        example: 2025-06-17T02:10:53.934Z
                  message:
                    type: string
                    example: Pocket creation and invite friend success
                  code:
                    type: integer
                    example: 201
        "400":
          description: Bad request
        "401":
          description: Unauthorized
  
  /pocket/respond-invite:
    post:
      summary: Respond to a pocket invitation
      tags:
        - Pocket
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - inviteId
                - response
              properties:
                inviteId:
                  type: string
                  example: "666f1e3b2b1a4c001e8b4567"
                response:
                  type: string
                  enum: [accepted, rejected]
                  example: accepted
      responses:
        "201":
          description: Invitation response processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      user_id:
                        type: integer
                        example: 3
                      pocket_id:
                        type: integer
                        example: 8
                      role:
                        type: string
                        example: viewer
                      contribution_amount:
                        type: number
                        example: 0
                      joined_at:
                        type: string
                        format: date-time
                        example: 2025-06-19T10:00:00.000Z
                      is_active:
                        type: boolean
                        example: true
                  message:
                    type: string
                    example: 'User has respond the invitation. Response: ACCEPTED'
                  code:
                    type: integer
                    example: 201
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Invitation not found
        "409":
          description: Conflict (already responded or already a member)

  /pocket/{id}:
    get:
      summary: Get pocket details by ID
      tags:
        - Pocket
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the pocket to fetch
          example: 8
      responses:
        "200":
          description: Pocket detail fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 8
                      name:
                        type: string
                        example: Donat Bahagia
                      type:
                        type: string
                        example: business
                      target_nominal:
                        type: string
                        example: "1000000"
                      current_balance:
                        type: string
                        example: "1000000"
                      deadline:
                        type: string
                        format: date-time
                        example: 2025-12-31T00:00:00.000Z
                      status:
                        type: string
                        example: active
                      icon_name:
                        type: string
                        example: flight_takeoff
                      color_hex:
                        type: string
                        example: "#00BCD4"
                      account_number:
                        type: string
                        example: "648946893"
                      owner_user_id:
                        type: integer
                        example: 2
                      owner:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2
                          name:
                            type: string
                            example: Siti Nurhaliza
                          phone_number:
                            type: string
                            example: "6281234567891"
                      members:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 3
                            name:
                              type: string
                              example: Budi Santoso
                            phone_number:
                              type: string
                              example: "6281234567892"
                            PocketMember:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 15
                                user_id:
                                  type: integer
                                  example: 3
                                pocket_id:
                                  type: integer
                                  example: 8
                                role:
                                  type: string
                                  example: admin
                                contribution_amount:
                                  type: string
                                  nullable: true
                                  example: null
                                joined_at:
                                  type: string
                                  nullable: true
                                  example: null
                                is_active:
                                  type: boolean
                                  nullable: true
                                  example: null
                                createdAt:
                                  type: string
                                  format: date-time
                                  example: 2025-06-16T06:52:27.702Z
                                updatedAt:
                                  type: string
                                  format: date-time
                                  example: 2025-06-16T08:41:50.579Z
                      user_role:
                        type: string
                        example: owner
                  message:
                    type: string
                    example: Pocket detail fetched successfully
                  code:
                    type: integer
                    example: 200

    patch:
      summary: Update pocket by ID
      tags:
        - Pocket
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the pocket to update
          example: 8
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: diganti wleee
                type:
                  type: string
                  enum: [saving, spending, business]
                  example: spending
      responses:
        "200":
          description: Pocket updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 8
                      name:
                        type: string
                        example: diganti wleee
                      type:
                        type: string
                        example: spending
                      target_nominal:
                        type: string
                        example: "1000000"
                      current_balance:
                        type: string
                        example: "1000000"
                      deadline:
                        type: string
                        format: date-time
                        example: 2025-12-31T00:00:00.000Z
                      status:
                        type: string
                        example: active
                      owner_user_id:
                        type: integer
                        example: 2
                      icon_name:
                        type: string
                        example: flight_takeoff
                      color_hex:
                        type: string
                        example: "#00BCD4"
                      account_number:
                        type: string
                        example: "648946893"
                      createdAt:
                        type: string
                        format: date-time
                        example: 2025-06-16T06:52:27.685Z
                      updatedAt:
                        type: string
                        format: date-time
                        example: 2025-06-17T02:20:28.027Z
                  message:
                    type: string
                    example: Pocket updated successfully
                  code:
                    type: integer
                    example: 200

    delete:
      summary: Delete pocket by ID
      tags:
        - Pocket
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the pocket to delete
          example: 8
      responses:
        "200":
          description: Pocket deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Pocket deleted successfully
                  message:
                    type: string
                    example: Product has been deleted
                  code:
                    type: integer
                    example: 200
  /pocket/{pocketId}/history:
    get:
      summary: Get pocket transaction history for a specific month
      tags:
        - Pocket
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: pocketId
          required: true
          schema:
            type: integer
          description: Pocket ID
        - in: query
          name: month
          required: false
          schema:
            type: string
            pattern: '^\d{4}-\d{2}$'
            example: "2025-06"
          description: Month in YYYY-MM format (defaults to current month if not provided)
      responses:
        "200":
          description: Pocket's transaction history has been fetched
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          example: "2025-06-15"
                        transactions:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 1
                              type:
                                type: string
                                example: Contribution
                              transaction_type:
                                type: integer
                                description: "1 for incoming, 0 for outgoing"
                                example: 1
                              amount:
                                type: number
                                example: 100000
                              description:
                                type: string
                                example: "Monthly saving"
                              is_business_expense:
                                type: boolean
                                example: false
                  message:
                    type: string
                    example: Pocket's transaction history has been fetched
                  code:
                    type: integer
                    example: 200
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Pocket not found or access denied

  /pocket/business/last-5:
    get:
      summary: Get last 5 business pocket transactions for the logged-in user
      tags:
        - Pocket
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Last 5 business pocket transactions fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: topup
                        description:
                          type: string
                          example: Monthly funding
                        amount:
                          type: number
                          example: 1000000
                        transaction_type:
                          type: integer
                          description: "1 for incoming, 0 for outgoing"
                          example: 1
                  message:
                    type: string
                    example: Pocket's transaction history has been fetched
                  code:
                    type: integer
                    example: 200
              example:
                ok: true
                data:
                  - type: topup
                    description: Monthly funding
                    amount: 1000000
                    transaction_type: 1
                  - type: purchase
                    description: Office supplies
                    amount: 250000
                    transaction_type: 0
                  - type: withdrawal
                    description: ATM withdrawal
                    amount: 500000
                    transaction_type: 0
                  - type: reimbursement
                    description: Business lunch
                    amount: 150000
                    transaction_type: 1
                  - type: payment
                    description: Software subscription
                    amount: 200000
                    transaction_type: 0
                message: Pocket's transaction history has been fetched
                code: 200
        "401":
          description: Unauthorized

  /pocket/business/{pocketId}/last-5:
    get:
      summary: Get last 5 business pocket transactions for a specific pocket
      tags:
        - Pocket
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: pocketId
          required: true
          schema:
            type: integer
          description: ID of the business pocket
      responses:
        "200":
          description: Last 5 business pocket transactions fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: topup
                        description:
                          type: string
                          example: Monthly funding
                        amount:
                          type: number
                          example: 1000000
                        transaction_type:
                          type: integer
                          description: "1 for incoming, 0 for outgoing"
                          example: 1
                  message:
                    type: string
                    example: Pocket's transaction history has been fetched
                  code:
                    type: integer
                    example: 200
              example:
                ok: true
                data:
                  - type: topup
                    description: Monthly funding
                    amount: 1000000
                    transaction_type: 1
                  - type: purchase
                    description: Office supplies
                    amount: 250000
                    transaction_type: 0
                  - type: withdrawal
                    description: ATM withdrawal
                    amount: 500000
                    transaction_type: 0
                  - type: reimbursement
                    description: Business lunch
                    amount: 150000
                    transaction_type: 1
                  - type: payment
                    description: Software subscription
                    amount: 200000
                    transaction_type: 0
                message: Pocket's transaction history has been fetched
                code: 200
        "401":
          description: Unauthorized
        "404":
          description: Pocket not found or access denied

  /pocket/business/{pocketId}/history:
    get:
      summary: Get business pocket transaction history for a specific pocket and duration
      tags:
        - Pocket
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: pocketId
          required: true
          schema:
            type: integer
          description: ID of the business pocket
        - in: query
          name: duration
          required: false
          schema:
            type: string
            enum: [30d, 3m, 6m, 1y]
            default: 30d
            example: 3m
          description: Duration for transaction history (last 30 days, 3 months, 6 months, or 1 year)
      responses:
        "200":
          description: Business pocket transaction history fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        createdAt:
                          type: string
                          format: date-time
                          example: "2025-06-17T02:10:53.934Z"
                        initiator_user:
                          type: string
                          example: "John Doe"
                        type:
                          type: string
                          example: Contribution
                        amount:
                          type: number
                          example: 100000
                        purpose:
                          type: string
                          example: "Monthly saving"
                        transaction_type:
                          type: integer
                          description: "1 for incoming, 0 for outgoing"
                          example: 1
                  message:
                    type: string
                    example: Pocket's transaction history has been fetched
                  code:
                    type: integer
                    example: 200
              example:
                ok: true
                data:
                  - createdAt: "2025-06-17T02:10:53.934Z"
                    initiator_user: "John Doe"
                    type: Contribution
                    amount: 100000
                    purpose: "Monthly saving"
                    transaction_type: 1
                  - createdAt: "2025-06-16T10:00:00.000Z"
                    initiator_user: "Jane Smith"
                    type: Payment
                    amount: 50000
                    purpose: "Office supplies"
                    transaction_type: 0
                message: Pocket's transaction history has been fetched
                code: 200
        "401":
          description: Unauthorized
        "404":
          description: Pocket not found or access denied

  /friendship:
    get:
      tags:
        - Friendship
      summary: Get all friendships (accepted and pending)
      description: Requires login. Returns list of friends excluding the current user, along with their friendship status.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Friendship details fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 3
                        name:
                          type: string
                          example: Budi Santoso
                        phone_number:
                          type: string
                          example: "6281234567892"
                        status:
                          type: string
                          enum: [accepted, pending]
                          example: accepted
                        accepted_at:
                          type: string
                          format: date-time
                          nullable: true
                          example: "2024-01-16T00:00:00.000Z"
                  message:
                    type: string
                    example: Friendship details fetched successfully
                  code:
                    type: integer
                    example: 200
              example:
                ok: true
                data:
                  - id: 3
                    name: Budi Santoso
                    phone_number: "6281234567892"
                    status: accepted
                    accepted_at: "2024-01-16T00:00:00.000Z"
                  - id: 4
                    name: Wati Andini
                    phone_number: "6281234567899"
                    status: pending
                    accepted_at: null
                message: Friendship details fetched successfully
                code: 200

  /transaction/topup:
    post:
      summary: Top up a pocket from user's mock savings account
      tags:
        - Transaction
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - balance
                - pocket_id
              properties:
                balance:
                  type: number
                  example: 100000
                pocket_id:
                  type: integer
                  example: 4
      responses:
        "201":
          description: Topup to pocket success
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 123
                      pocket_id:
                        type: integer
                        example: 4
                      initiator_user_id:
                        type: integer
                        example: 2
                      type:
                        type: string
                        example: Topup
                      amount:
                        type: number
                        example: 100000
                      purpose:
                        type: string
                        example: Topup to Arisan Keluarga - John Doe
                      status:
                        type: string
                        example: completed
                      description:
                        type: string
                        nullable: true
                        example: null
                      is_business_expense:
                        type: boolean
                        example: false
                      createdAt:
                        type: string
                        format: date-time
                        example: 2025-06-18T10:00:00.000Z
                      updatedAt:
                        type: string
                        format: date-time
                        example: 2025-06-18T10:00:00.000Z
                  message:
                    type: string
                    example: Topup to pocket success
                  code:
                    type: integer
                    example: 201
        "401":
          description: Unauthorized
        "404":
          description: User/Pocket not found or user is not a member of that pocket
        "400":
          description: Not enough balance or bad request

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
